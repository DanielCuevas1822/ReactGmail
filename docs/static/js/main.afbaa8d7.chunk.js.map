{"version":3,"sources":["components/HeaderForm.js","components/Header.js","components/EmailItem.js","components/EmailReader.js","components/FooterPolicy.js","components/FooterCookies.js","components/FooterMain.js","components/Footer.js","services/getDataFromApi.js","components/AppClassComponent.js","serviceWorker.js","index.js"],"names":["HeaderForm","props","className","onClick","ev","preventDefault","handleInboxFilter","handleDeleteFilter","type","placeholder","value","textFilter","onChange","data","target","handleTextFilter","Header","to","EmailItem","deletedClass","deleted","readClass","read","id","from","subject","time","stopPropagation","handleDeleteEmail","EmailReader","bind","this","handleReadEmail","fromName","fromEmail","body","React","Component","FooterPolicy","title","FooterConfig","FooterMain","path","children","match","isExact","Footer","FooterCookies","getDataFromApi","fetch","then","response","json","results","App","state","emails","showInbox","renderEmailDetail","setState","localStorageData","JSON","parse","localStorage","getItem","setItem","stringify","emailId","setEmailAttribute","attribute","prevState","find","email","emailType","text","lowerCaseTextFilter","toLowerCase","filter","includes","map","date","selectedEmail","params","undefined","renderFilters","render","renderEmails","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.afbaa8d7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../stylesheets/HeaderForm.css\";\n\nfunction HeaderForm(props) {\n  const handleInboxFilter = (ev) => {\n    ev.preventDefault();\n    props.handleInboxFilter();\n  };\n\n  const handleDeleteFilter = (ev) => {\n    ev.preventDefault();\n    props.handleDeleteFilter();\n  };\n\n  const handleTextFilter = (ev) => {\n    ev.preventDefault();\n    const data = {\n      value: ev.target.value,\n    };\n    props.handleTextFilter(data);\n  };\n\n  return (\n    <form className=\"text-align-right\">\n      <button className=\"form__btn\" onClick={handleInboxFilter}>\n        <span className=\"fas fa-inbox mr-1\"></span>\n        Recibidos\n      </button>\n      <button className=\"form__btn\" onClick={handleDeleteFilter}>\n        <span className=\"fas fa-trash mr-1\"></span>\n        Papelera\n      </button>\n      <input\n        className=\"form__input-text\"\n        type=\"text\"\n        placeholder=\"Buscar un correo\"\n        value={props.textFilter}\n        onChange={handleTextFilter}\n      />\n    </form>\n  );\n}\n\nexport default HeaderForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport HeaderForm from \"./HeaderForm\";\n\nfunction Header(props) {\n  return (\n    <header className=\"col2 mb-1\">\n      <div>\n        <h1 className=\"title\">\n          <Link to=\"/\" className=\"text--decoration--none\">\n            <span className=\"fas fa-envelope-open-text mr-1\"></span>\n            Gmail\n          </Link>\n        </h1>\n      </div>\n\n      <HeaderForm\n        textFilter={props.textFilter}\n        handleInboxFilter={props.handleInboxFilter}\n        handleDeleteFilter={props.handleDeleteFilter}\n        handleTextFilter={props.handleTextFilter}\n      />\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../stylesheets/EmailItem.css\";\n\nfunction EmailItem(props) {\n  const handleDeleteEmail = (ev) => {\n    ev.stopPropagation();\n    props.handleDeleteEmail(props.id);\n  };\n\n  let deletedClass = props.deleted === true ? \"text--decoration--through\" : \"\";\n  let readClass = props.read === false ? \"text--bold\" : \"\";\n  return (\n    <tr className={`cursor-pointer ${deletedClass} ${readClass}`}>\n      <td className=\"email--cell\">\n        <Link\n          className=\"email--link text--decoration--none\"\n          to={`email/${props.id}`}\n        >\n          {props.from}\n        </Link>\n      </td>\n      <td className=\"email--cell\">\n        <Link\n          className=\"email--link text--decoration--none\"\n          to={`email/${props.id}`}\n        >\n          {props.subject}\n        </Link>\n      </td>\n      <td className=\"email--cell\">\n        <Link\n          className=\"email--link text--decoration--none\"\n          to={`email/${props.id}`}\n        >\n          {props.time}\n        </Link>\n      </td>\n      <td className=\"text-align-right\">\n        <button\n          className=\"form__btn fas fa-trash\"\n          onClick={handleDeleteEmail}\n        ></button>\n      </td>\n    </tr>\n  );\n}\n\nexport default EmailItem;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass EmailReader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDeleteEmail = this.handleDeleteEmail.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.handleReadEmail(this.props.id);\n  }\n\n  handleDeleteEmail() {\n    this.props.handleDeleteEmail(this.props.id);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"col2 mt-1 pt-1\">\n          <div>\n            <h2 className=\"title--meidum\">{this.props.subject}</h2>\n            <h3 className=\"title--small\">\n              <span className=\"text--bold display-inline-block mr-1\">\n                {this.props.fromName}\n              </span>\n              <span className=\"text-normal display-inline-block\">\n                &lt;{this.props.fromEmail}&gt;\n              </span>\n            </h3>\n          </div>\n          <div className=\"text-align-right\">\n            <Link className=\"fas fa-times-circle form__btn\" to=\"/\" />\n            <Link\n              className=\"fas fa-trash form__btn\"\n              to=\"/\"\n              onClick={this.handleDeleteEmail}\n            />\n          </div>\n        </div>\n\n        <p>{this.props.body}</p>\n\n        <div className=\"mt-1\">\n          <button className=\"form__btn\">\n            <span className=\"fas fa-reply mr-1\"></span>\n            Responder\n          </button>\n\n          <button className=\"form__btn\">\n            <span className=\"fas fa-reply-all mr-1\"></span>\n            Responder a todos\n          </button>\n\n          <button className=\"form__btn\">\n            <span className=\"fas fa-share mr-1\"></span>\n            Reenviar a todos\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EmailReader;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst FooterPolicy = () => {\n  return (\n    <>\n      <h4 className=\"title--medium pb-1\">Política de privacidad:</h4>\n      <p>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Nesciunt\n        delectus voluptates nulla assumenda hic, molestiae at quibusdam\n        repudiandae magnam accusantium sed accusamus amet sunt molestias\n        explicabo natus eum temporibus. Eum.\n      </p>\n      <Link to=\"/\">\n        <span\n          title=\"Volver\"\n          className=\"btn--close fas fa-times-circle text--decoration--none\"\n        ></span>\n      </Link>\n    </>\n  );\n};\n\nexport default FooterPolicy;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst FooterConfig = (props) => {\n  return (\n    <div>\n      <h4 className=\"title--medium pb-1\">Cookies:</h4>\n      <p>\n        Esta web no usa cookies, pero sí que usa un poquito de local storage ;)\n      </p>\n      <Link to=\"/\">\n        <span\n          title=\"Volver\"\n          className=\"btn--close fas fa-times-circle text--decoration--none\"\n        ></span>\n      </Link>\n    </div>\n  );\n};\n\nexport default FooterConfig;\n","import React from \"react\";\nimport { Link, Route } from \"react-router-dom\";\n\nconst FooterMain = () => {\n  const renderLinkToHome = (props) => {\n    if (props.match.isExact === false) {\n      return (\n        <>\n          /\n          <Link className=\"nav__link text--decoration--none\" to=\"/\">\n            Ir a la home\n          </Link>\n        </>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <div className=\"col2\">\n      <small className=\"text--primary-light\">\n        <Link className=\"nav__link text--decoration--none\" to=\"/privacy\">\n          Política de privacidad\n        </Link>\n        /\n        <Link className=\"nav__link text--decoration--none\" to=\"/cookies\">\n          Cookies\n        </Link>\n        <Route path=\"/\" children={renderLinkToHome} />\n      </small>\n      <small className=\"text--primary-light text-align-right\">\n        Ejercicio de React / Curso de Adalab\n      </small>\n    </div>\n  );\n};\n\nexport default FooterMain;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport FooterPolicy from \"./FooterPolicy\";\nimport FooterCookies from \"./FooterCookies\";\nimport FooterMain from \"./FooterMain\";\nimport \"../stylesheets/Footer.css\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <Switch>\n        <Route path=\"/cookies\">\n          <FooterCookies />\n        </Route>\n        <Route path=\"/privacy\">\n          <FooterPolicy />\n        </Route>\n        <Route>\n          <FooterMain />\n        </Route>\n      </Switch>\n    </footer>\n  );\n};\n\nexport default Footer;\n\n// if (path === '/cookies') {\n//   render(FooterCookies);\n// } else if (path === '/privacy') {\n//   render(FooterPolicy);\n// } else {\n//   render(FooterMain);\n// }\n","const getDataFromApi = () => {\n    return fetch('//beta.adalab.es/ejercicios-extra/api/emails/v01.json')\n      .then(response => response.json())\n      .then(data => {\n        return data.results;\n      });\n  };\n  \n  export default getDataFromApi;","// IMPORTANTE: este componente no se está usando, es para poder compararlo con App.js, que es el equivalente en modo funcional\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport EmailItem from \"./EmailItem\";\nimport EmailReader from \"./EmailReader\";\nimport Footer from \"./Footer\";\nimport getDataFromApi from \"../services/getDataFromApi\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emails: [],\n      textFilter: \"\",\n      showInbox: true,\n    };\n    this.handleInboxFilter = this.handleInboxFilter.bind(this);\n    this.handleDeleteFilter = this.handleDeleteFilter.bind(this);\n    this.handleTextFilter = this.handleTextFilter.bind(this);\n    this.handleReadEmail = this.handleReadEmail.bind(this);\n    this.handleDeleteEmail = this.handleDeleteEmail.bind(this);\n    this.renderEmailDetail = this.renderEmailDetail.bind(this);\n  }\n\n  componentDidMount() {\n    // get data from api\n    getDataFromApi().then((data) => {\n      this.setState({\n        emails: data,\n      });\n    });\n    // get data from local storage\n    let localStorageData = JSON.parse(localStorage.getItem(\"emailFilters\"));\n    if (localStorageData !== null) {\n      this.setState({\n        textFilter: localStorageData.textFilter,\n        showInbox: localStorageData.showInbox,\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    const localStorageData = {\n      textFilter: this.state.textFilter,\n      showInbox: this.state.showInbox,\n    };\n    localStorage.setItem(\"emailFilters\", JSON.stringify(localStorageData));\n  }\n\n  // user event handlers >>> change state\n\n  handleInboxFilter() {\n    this.setState({ showInbox: true });\n  }\n\n  handleDeleteFilter() {\n    this.setState({ showInbox: false });\n  }\n\n  handleTextFilter(data) {\n    this.setState({ textFilter: data.value });\n  }\n\n  handleReadEmail(emailId) {\n    this.setEmailAttribute(emailId, \"read\");\n  }\n\n  handleDeleteEmail(emailId) {\n    this.setEmailAttribute(emailId, \"deleted\");\n  }\n\n  setEmailAttribute(emailId, attribute) {\n    this.setState((prevState) => {\n      const email = prevState.emails.find((email) => email.id === emailId);\n      email[attribute] = true;\n      return { emails: prevState.emails };\n    });\n  }\n\n  // render methods >>> paint state\n\n  renderFilters() {\n    const emailType = this.state.showInbox ? \"recibidos\" : \"borrados\";\n    const text =\n      this.state.textFilter === \"\" ? (\n        \"y sin filtrar.\"\n      ) : (\n        <span>\n          y filtrando por{\" \"}\n          <span className=\"text--bold\">{this.state.textFilter}</span>.\n        </span>\n      );\n    return (\n      <p className=\"mb-1\">\n        La usuaria está visualizando los emails{\" \"}\n        <span className=\"text--bold\">{emailType}</span> {text}\n      </p>\n    );\n  }\n\n  renderEmails() {\n    const lowerCaseTextFilter = this.state.textFilter.toLowerCase();\n    return (\n      this.state.emails\n        // filter by inbox vs deleted\n        .filter((email) => {\n          // return this.state.showInbox !== email.deleted;\n          return this.state.showInbox === true ? !email.deleted : email.deleted;\n        })\n        // filter by inboxFilter text\n        .filter((email) => {\n          return (\n            email.fromName.toLowerCase().includes(lowerCaseTextFilter) ||\n            email.subject.toLowerCase().includes(lowerCaseTextFilter) ||\n            email.body.toLowerCase().includes(lowerCaseTextFilter)\n          );\n        })\n        .map((email) => {\n          return (\n            <EmailItem\n              key={email.id}\n              id={email.id}\n              from={email.fromName}\n              subject={email.subject}\n              time={email.date}\n              read={email.read}\n              deleted={email.deleted}\n              handleDeleteEmail={this.handleDeleteEmail}\n            />\n          );\n        })\n    );\n  }\n\n  renderEmailDetail(props) {\n    const selectedEmail = this.state.emails.find(\n      (email) => email.id === props.match.params.emailId\n    );\n    if (selectedEmail !== undefined) {\n      return (\n        <EmailReader\n          id={selectedEmail.id}\n          fromName={selectedEmail.fromName}\n          fromEmail={selectedEmail.fromEmail}\n          subject={selectedEmail.subject}\n          body={selectedEmail.body}\n          handleReadEmail={this.handleReadEmail}\n          handleDeleteEmail={this.handleDeleteEmail}\n        />\n      );\n    } else {\n      return <p>Email no encontrado</p>;\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header\n          textFilter={this.state.textFilter}\n          handleInboxFilter={this.handleInboxFilter}\n          handleDeleteFilter={this.handleDeleteFilter}\n          handleTextFilter={this.handleTextFilter}\n        />\n        {this.renderFilters()}\n\n        <Switch>\n          <Route path=\"/email/:emailId\" render={this.renderEmailDetail} />\n          <Route path=\"/\">\n            <table className=\"table\">\n              <tbody>{this.renderEmails()}</tbody>\n            </table>\n          </Route>\n        </Switch>\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/AppClassComponent';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}